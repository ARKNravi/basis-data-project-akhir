package Main;

    import java.awt.Color;
    import java.awt.Font;
    import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;

import javax.swing.JOptionPane;
    import javax.swing.table.DefaultTableModel;

    import CRUD.ReadTransaksi;
import CRUD.Transaksi;
import Connection.SQLConnection;
    import Search.Search;

    public class Form_Transaksi extends javax.swing.JPanel {

            private void setTransactionsTableModel() {
            DefaultTableModel model = ReadTransaksi.getTransactionsTableModel();
            tableDataTransaksi.setModel(model);
        }
        

        /**
         * Creates new form Form_Transaksi
         */
        public Form_Transaksi( String os) {
            initComponents(os);
            
            tableDataTransaksi.getTableHeader().setFont(new Font("Lato", Font.PLAIN, 12));
            tableDataTransaksi.getTableHeader().setOpaque(false);
            tableDataTransaksi.getTableHeader().setForeground(new Color(0,0,0));
            tableDataTransaksi.setRowHeight(25);  
            setTransactionsTableModel();
        }
        
            
        void cleanTextField() {
            txt_NoNota.setText("Cari No Nota");
        
        }


        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents( String os) {

            mainPanel = new javax.swing.JPanel();
            riwayatTransaksi = new javax.swing.JPanel();
            jLabel2 = new javax.swing.JLabel();
            jSeparator3 = new javax.swing.JSeparator();
            jScrollPane2 = new javax.swing.JScrollPane();
            tableDataTransaksi = new javax.swing.JTable();
            TransaksiBaru_button = new javax.swing.JButton();
            button_search = new javax.swing.JLabel();
            jSeparator4 = new javax.swing.JSeparator();
            txt_NoNota = new javax.swing.JTextField();
            transaksiBaru = new javax.swing.JPanel();
            jLabel3 = new javax.swing.JLabel();
            jSeparator5 = new javax.swing.JSeparator();
            tambahTransaksi_button = new javax.swing.JButton();
            jSeparator6 = new javax.swing.JSeparator();
            inputJumlahBarang = new javax.swing.JTextField();
            jLabel6 = new javax.swing.JLabel();
            ukuran_comboBox = new javax.swing.JComboBox<>();
            jLabel5 = new javax.swing.JLabel();
            inputNamaBarang = new javax.swing.JTextField();
            jLabel4 = new javax.swing.JLabel();
            BeliDimana = new javax.swing.JComboBox<>();
            jLabel7 = new javax.swing.JLabel();
            ukuran_comboBox2 = new javax.swing.JComboBox<>();
            jLabel9 = new javax.swing.JLabel();
            jScrollPane1 = new javax.swing.JScrollPane();
            jTable1 = new javax.swing.JTable();
            HitungTotal_button = new javax.swing.JButton();
            batal_button = new javax.swing.JButton();
            jLabel8 = new javax.swing.JLabel();
            batal_button1 = new javax.swing.JButton();
            TOTALHARGA = new javax.swing.JTextField();
            hapusBarangNota_button2 = new javax.swing.JButton();
            jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        mainPanel.setLayout(new java.awt.CardLayout());

        riwayatTransaksi.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Lato", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(13, 14, 69));
        jLabel2.setText("RIWAYAT TRANSAKSI");

            tableDataTransaksi.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null}
                },
                new String [] {
                    "No Nota", "Kode Barang", "Ukuran", "Jumlah ", "Total Harga", "Tanggal Transaksi", "Metode Pembelian"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }
            });
            tableDataTransaksi.setFocusable(false);
            tableDataTransaksi.setGridColor(new java.awt.Color(0, 0, 0));
            tableDataTransaksi.setRowHeight(25);
            tableDataTransaksi.setSelectionBackground(new java.awt.Color(128, 128, 128));
            tableDataTransaksi.setShowGrid(false);
            jScrollPane2.setViewportView(tableDataTransaksi);

        TransaksiBaru_button.setBackground(new java.awt.Color(13, 14, 69));
        TransaksiBaru_button.setFont(new java.awt.Font("Lato", 1, 14)); // NOI18N
        TransaksiBaru_button.setForeground(new java.awt.Color(255, 255, 255));
        TransaksiBaru_button.setText("TRANSAKSI BARU");
        TransaksiBaru_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransaksiBaru_buttonActionPerformed(evt);
            }
        });

            button_search.setIcon(new javax.swing.ImageIcon("GUI"+os+"image_main"+os+"search (1).png")); // NOI18N
            button_search.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    button_searchMouseClicked(evt);
                }
            });
        

            txt_NoNota.setText("Cari No Nota");
            txt_NoNota.setBorder(null);
            txt_NoNota.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusGained(java.awt.event.FocusEvent evt) {
                    txt_NoNotaFocusGained(evt);
                }
                public void focusLost(java.awt.event.FocusEvent evt) {
                    txt_NoNotaFocusLost(evt);
                }
            });

            javax.swing.GroupLayout riwayatTransaksiLayout = new javax.swing.GroupLayout(riwayatTransaksi);
            riwayatTransaksi.setLayout(riwayatTransaksiLayout);
            riwayatTransaksiLayout.setHorizontalGroup(
                riwayatTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(riwayatTransaksiLayout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addGroup(riwayatTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(riwayatTransaksiLayout.createSequentialGroup()
                            .addGroup(riwayatTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(TransaksiBaru_button, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap(1270, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, riwayatTransaksiLayout.createSequentialGroup()
                            .addGroup(riwayatTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2)
                                .addGroup(riwayatTransaksiLayout.createSequentialGroup()
                                    .addGap(0, 1266, Short.MAX_VALUE)
                                    .addGroup(riwayatTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txt_NoNota, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(button_search)))
                            .addGap(36, 36, 36))))
            );
            riwayatTransaksiLayout.setVerticalGroup(
                riwayatTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(riwayatTransaksiLayout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(jLabel2)
                    .addGap(18, 18, 18)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(riwayatTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txt_NoNota, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(button_search, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TransaksiBaru_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(26, Short.MAX_VALUE))
            );

        mainPanel.add(riwayatTransaksi, "card2");

        transaksiBaru.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Lato", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(13, 14, 69));
        jLabel3.setText("RIWAYAT TRANSAKSI");

        tambahTransaksi_button.setBackground(new java.awt.Color(13, 14, 69));
        tambahTransaksi_button.setFont(new java.awt.Font("Lato", 1, 14)); // NOI18N
        tambahTransaksi_button.setForeground(new java.awt.Color(255, 255, 255));
        tambahTransaksi_button.setText("TAMBAH TRANSAKSI");
        tambahTransaksi_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahTransaksi_buttonActionPerformed(evt);
            }
        });

        inputJumlahBarang.setBackground(new java.awt.Color(245, 245, 245));
        inputJumlahBarang.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Lato", 0, 16)); // NOI18N
        jLabel6.setText("Jumlah Barang");

        ukuran_comboBox.setBackground(new java.awt.Color(245, 245, 245));
        ukuran_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "XXL", "XL", "L", "M", "S" }));
        ukuran_comboBox.setBorder(null);

        jLabel5.setFont(new java.awt.Font("Lato", 0, 16)); // NOI18N
        jLabel5.setText("Ukuran");

        inputNamaBarang.setBackground(new java.awt.Color(245, 245, 245));
        inputNamaBarang.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Lato", 0, 16)); // NOI18N
        jLabel4.setText("Kode Barang");

            BeliDimana.setBackground(new java.awt.Color(245, 245, 245));
            BeliDimana.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Offlen", "Shopee", "Tokopedia" }));
            BeliDimana.setBorder(null);

            jLabel7.setFont(new java.awt.Font("Lato", 0, 16)); // NOI18N
            jLabel7.setText("Beli Dimana");

            ukuran_comboBox2.setBackground(new java.awt.Color(245, 245, 245));
            ukuran_comboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ShopeePay", "GoPay", "BCA","BNI","BRI","BSI", "Mandiri" }));
            ukuran_comboBox2.setBorder(null);

            jLabel9.setFont(new java.awt.Font("Lato", 0, 16)); // NOI18N
            jLabel9.setText("Metode Pembayaran");

            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                },
                new String [] {
                    "Kode Barang", "Ukuran", "Jumlah", "Sub Total"
                }
            ));
            jScrollPane1.setViewportView(jTable1);

        HitungTotal_button.setBackground(new java.awt.Color(13, 14, 69));
        HitungTotal_button.setFont(new java.awt.Font("Lato", 1, 14)); // NOI18N
        HitungTotal_button.setForeground(new java.awt.Color(255, 255, 255));
        HitungTotal_button.setText("HITUNG TOTAL");
        HitungTotal_button.setToolTipText("");
        HitungTotal_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HitungTotal_buttonActionPerformed(evt);
            }
        });

        batal_button.setBackground(new java.awt.Color(13, 14, 69));
        batal_button.setFont(new java.awt.Font("Lato", 1, 14)); // NOI18N
        batal_button.setForeground(new java.awt.Color(255, 255, 255));
        batal_button.setText("BATAL");
        batal_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batal_buttonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Lato", 1, 16)); // NOI18N
        jLabel8.setText("Nota");

        batal_button1.setBackground(new java.awt.Color(13, 14, 69));
        batal_button1.setFont(new java.awt.Font("Lato", 1, 14)); // NOI18N
        batal_button1.setForeground(new java.awt.Color(255, 255, 255));
        batal_button1.setText("TAMBAH BARANG");
        batal_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batal_button1ActionPerformed(evt);
            }
        });

        TOTALHARGA.setToolTipText("");

        hapusBarangNota_button2.setBackground(new java.awt.Color(13, 14, 69));
        hapusBarangNota_button2.setFont(new java.awt.Font("Lato", 1, 14)); // NOI18N
        hapusBarangNota_button2.setForeground(new java.awt.Color(255, 255, 255));
        hapusBarangNota_button2.setText("HAPUS BARANG");
        hapusBarangNota_button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusBarangNota_button2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lato", 1, 14)); // NOI18N
        jLabel1.setText("Total Yang Harus Dibayar");

            javax.swing.GroupLayout transaksiBaruLayout = new javax.swing.GroupLayout(transaksiBaru);
            transaksiBaru.setLayout(transaksiBaruLayout);
            transaksiBaruLayout.setHorizontalGroup(
                transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(transaksiBaruLayout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addGroup(transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(transaksiBaruLayout.createSequentialGroup()
                            .addGroup(transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 1368, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addGroup(transaksiBaruLayout.createSequentialGroup()
                                    .addComponent(tambahTransaksi_button, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(batal_button, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(transaksiBaruLayout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(828, 828, 828)
                                    .addComponent(jLabel8)))
                            .addContainerGap(265, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, transaksiBaruLayout.createSequentialGroup()
                            .addGroup(transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, transaksiBaruLayout.createSequentialGroup()
                                    .addGroup(transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(inputJumlahBarang, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ukuran_comboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(inputNamaBarang, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(BeliDimana, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ukuran_comboBox2, 0, 762, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(transaksiBaruLayout.createSequentialGroup()
                                            .addComponent(batal_button1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(12, 12, 12)
                                            .addComponent(hapusBarangNota_button2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(HitungTotal_button, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, transaksiBaruLayout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(TOTALHARGA, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(174, 174, 174))))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, transaksiBaruLayout.createSequentialGroup()
                    .addContainerGap(1233, Short.MAX_VALUE)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(141, 141, 141))
            );
            transaksiBaruLayout.setVerticalGroup(
                transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(transaksiBaruLayout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(jLabel3)
                    .addGap(18, 18, 18)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tambahTransaksi_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(batal_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(48, 48, 48)
                    .addGroup(transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(transaksiBaruLayout.createSequentialGroup()
                            .addGroup(transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(transaksiBaruLayout.createSequentialGroup()
                                    .addComponent(BeliDimana, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(inputNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ukuran_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(inputJumlahBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ukuran_comboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(batal_button1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(hapusBarangNota_button2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(HitungTotal_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(64, 64, 64))
                        .addGroup(transaksiBaruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TOTALHARGA, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
            );

        mainPanel.add(transaksiBaru, "card2");

        add(mainPanel, "card2");
    }// </editor-fold>//GEN-END:initComponents

        private void TransaksiBaru_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransaksiBaru_buttonActionPerformed
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        
        mainPanel.add(transaksiBaru);
        mainPanel.repaint();
        mainPanel.revalidate();
        }//GEN-LAST:event_TransaksiBaru_buttonActionPerformed
        private void batal_button1ActionPerformed(java.awt.event.ActionEvent evt) {
            String kodeBarangText = inputNamaBarang.getText();
            String jumlahBarangText = inputJumlahBarang.getText();
        
            if (!kodeBarangText.isEmpty() && !jumlahBarangText.isEmpty()) {
                int kodeBarang = Integer.parseInt(kodeBarangText);
                int jumlahBarang = Integer.parseInt(jumlahBarangText);
        
                String ukuran = (String) ukuran_comboBox.getSelectedItem();
        
                try {
                    // Query the barang and stok_barang tables to get the harga_barang and available stock
                    String query = "SELECT barang.harga, stok_barang.offlen FROM barang JOIN stok_barang ON barang.kode_barang = stok_barang.kode_barang WHERE barang.kode_barang = ? AND stok_barang.ukuran = ?";
                    Connection connection = SQLConnection.getConnection();
                    PreparedStatement preparedStatement = connection.prepareStatement(query);
                    preparedStatement.setInt(1, kodeBarang);
                    preparedStatement.setString(2, ukuran);
                    ResultSet resultSet = preparedStatement.executeQuery();
                    if (resultSet.next()) {
                        int harga_barang = resultSet.getInt("harga");
                        int availableStock = resultSet.getInt("offlen");
        
                        if (availableStock >= jumlahBarang) {
                            // Calculate the subtotal
                            int subtotal = jumlahBarang * harga_barang;
        
                            // Check if a row with the same kode_barang, no_nota, and ukuran already exists
                            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                            int rowCount = model.getRowCount();
                            for (int i = 0; i < rowCount; i++) {
                                if ((int) model.getValueAt(i, 0) == kodeBarang && model.getValueAt(i, 1).equals(ukuran)) {
                                    // Update the jumlah_barang and subtotal in the existing row
                                    int existingJumlahBarang = (int) model.getValueAt(i, 2);
                                    model.setValueAt(existingJumlahBarang + jumlahBarang, i, 2);
        
                                    int existingSubtotal = (int) model.getValueAt(i, 3);
                                    model.setValueAt(existingSubtotal + subtotal, i, 3);
                                    return;
                                }
                            }
        
                            // If no existing row was found, add a new row to the table
                            model.addRow(new Object[]{kodeBarang, ukuran, jumlahBarang, subtotal});
                        } else {
                            // Show a warning message
                            JOptionPane.showMessageDialog(null, "Not enough stock available.", "Warning", JOptionPane.WARNING_MESSAGE);
                        }
                    } else {
                        System.out.println("Kode Barang or Ukuran not found in barang or stok_barang table.");
                    }
                } catch (SQLException e) {
                    System.out.println("SQL Exception: " + e.getMessage());
                }
            } else {
                System.out.println("Please fill in all fields.");
            }
        }
        
        private void tambahTransaksi_buttonActionPerformed(java.awt.event.ActionEvent evt) {
            HashMap<String, String> metodePembelianMap = new HashMap<>();
            metodePembelianMap.put("ShopeePay", "1");
            metodePembelianMap.put("GoPay", "2");
            metodePembelianMap.put("BCA", "3");
            metodePembelianMap.put("BNI", "4");
            metodePembelianMap.put("BRI", "5");
            metodePembelianMap.put("BSI", "6");
            metodePembelianMap.put("Mandiri", "7");
        
            String namaMetode = (String) ukuran_comboBox2.getSelectedItem();
            String kodeMetode = metodePembelianMap.get(namaMetode);
            String beliDimana = (String) BeliDimana.getSelectedItem();
        
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int rowCount = model.getRowCount();
        
            for (int i = 0; i < rowCount; i++) {
                int kodeBarang = (int) model.getValueAt(i, 0);
                String ukuran = (String) model.getValueAt(i, 1);
                int jumlahBarang = (int) model.getValueAt(i, 2);
        
                try {
                    String query = "SELECT harga FROM barang WHERE kode_barang = ?";
                    Connection connection = SQLConnection.getConnection();
                    PreparedStatement preparedStatement = connection.prepareStatement(query);
                    preparedStatement.setInt(1, kodeBarang);
                    ResultSet resultSet = preparedStatement.executeQuery();
                    if (resultSet.next()) {
                        int harga_barang = resultSet.getInt("harga");
        
                        Transaksi transaksi = new Transaksi();
                        int total_barang = 1;
                        int total_harga = 0; 
                        if (currentNota == -1) {
                            currentNota = transaksi.createNota(total_barang, total_harga, kodeMetode);
                        }
        
                        int total_harga_barang = jumlahBarang * harga_barang;
                        transaksi.createTransaksi(currentNota, kodeBarang, ukuran, jumlahBarang, total_harga_barang);
        
                        // Update the stok_barang table to decrease the stock
                        query = "UPDATE stok_barang SET " + beliDimana.toLowerCase() + " = " + beliDimana.toLowerCase() + " - ? WHERE kode_barang = ? AND ukuran = ?";
                        preparedStatement = connection.prepareStatement(query);
                        preparedStatement.setInt(1, jumlahBarang);
                        preparedStatement.setInt(2, kodeBarang);
                        preparedStatement.setString(3, ukuran);
                        preparedStatement.executeUpdate();
                    } else {
                        System.out.println("Kode Barang not found in barang table.");
                    }
                } catch (SQLException e) {
                    System.out.println("SQL Exception: " + e.getMessage());
                }
            }
        
            // Clear the table
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {},
                new String [] {
                    "Kode Barang", "Ukuran", "Jumlah", "Sub Total"
                }
            ));
        }
        
        
        

        private void HitungTotal_buttonActionPerformed(java.awt.event.ActionEvent evt) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int rowCount = model.getRowCount();
        
            int totalHarga = 0;
            for (int i = 0; i < rowCount; i++) {
                totalHarga += (int) model.getValueAt(i, 3);
            }
        
            System.out.println(Integer.toString(totalHarga));
            TOTALHARGA.setText(Integer.toString(totalHarga));
        }
        
        private void batal_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batal_buttonActionPerformed
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        
        mainPanel.add(riwayatTransaksi);
        mainPanel.repaint();
        mainPanel.revalidate();
        }//GEN-LAST:event_batal_buttonActionPerformed

        private void txt_NoNotaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_NoNotaFocusGained
            // TODO add your handling code here:
            String NoNota = txt_NoNota.getText();
            if(NoNota.equals("Cari No Nota")) {
                txt_NoNota.setText("");
            }
        }//GEN-LAST:event_txt_NoNotaFocusGained

        private void txt_NoNotaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_NoNotaFocusLost
            // TODO add your handling code here:
            String NoNota = txt_NoNota.getText();
            if(NoNota.equals("")||NoNota.equals("Password")) {
                txt_NoNota.setText("Password");
            }
        }//GEN-LAST:event_txt_NoNotaFocusLost
        public void updateTable(int no_nota) {
            String query = "SELECT transaksi.kode_barang, transaksi.ukuran, transaksi.jumlah_barang, transaksi.total_harga_barang FROM transaksi WHERE transaksi.no_nota = ?";
        
            try {
                Connection connection = SQLConnection.getConnection();
                PreparedStatement preparedStatement = connection.prepareStatement(query, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                preparedStatement.setInt(1, no_nota);
                ResultSet resultSet = preparedStatement.executeQuery();
                resultSet.last();
                int rowCount = resultSet.getRow();
                resultSet.beforeFirst();
                Object[][] data = new Object[rowCount][4];
                int rowIndex = 0;
                while (resultSet.next()) {
                    data[rowIndex][0] = resultSet.getInt("kode_barang");
                    data[rowIndex][1] = resultSet.getString("ukuran");
                    data[rowIndex][2] = resultSet.getInt("jumlah_barang");
                    data[rowIndex][3] = resultSet.getInt("total_harga_barang");
                    rowIndex++;
                }
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                int currentRowCount = model.getRowCount();
                Object[][] currentData = new Object[currentRowCount][4];
                for (int i = 0; i < currentRowCount; i++) {
                    currentData[i][0] = model.getValueAt(i, 0);
                    currentData[i][1] = model.getValueAt(i, 1);
                    currentData[i][2] = model.getValueAt(i, 2);
                    currentData[i][3] = model.getValueAt(i, 3);
                }
                Object[][] combinedData = new Object[currentRowCount + rowCount][4];
                System.arraycopy(currentData, 0, combinedData, 0, currentRowCount);
                System.arraycopy(data, 0, combinedData, currentRowCount, rowCount);
        
                jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    combinedData,
                    new String [] {
                        "Kode Barang", "Ukuran", "Jumlah", "Sub Total"
                    }
                ));
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        int currentNota = -1;
        
        private void hapusBarangNota_button2ActionPerformed(java.awt.event.ActionEvent evt) {
            // Get the selected row
            int selectedRow = jTable1.getSelectedRow();
        
            if (selectedRow != -1) {
                // Remove the selected row
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.removeRow(selectedRow);
            } else {
                System.out.println("No row selected.");
            }
        }
        

        private void button_searchMouseClicked(java.awt.event.MouseEvent evt) {
            try {
                String keyword = txt_NoNota.getText();
                DefaultTableModel model = Search.nota(keyword);
        
                // Update the table with search results
                tableDataTransaksi.setModel(model);
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Failed to search for transactions. Please check your inputs and try again.");
            }
        }
        

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton HitungTotal_button;
        private javax.swing.JTextField TOTALHARGA;
        private javax.swing.JButton TransaksiBaru_button;
        private javax.swing.JButton batal_button;
        private javax.swing.JButton batal_button1;
        private javax.swing.JLabel button_search;
        private javax.swing.JButton hapusBarangNota_button2;
        private javax.swing.JTextField inputJumlahBarang;
        private javax.swing.JComboBox<String> BeliDimana;
        private javax.swing.JTextField inputNamaBarang;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JLabel jLabel6;
        private javax.swing.JLabel jLabel7;
        private javax.swing.JLabel jLabel8;
        private javax.swing.JLabel jLabel9;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JSeparator jSeparator3;
        private javax.swing.JSeparator jSeparator4;
        private javax.swing.JSeparator jSeparator5;
        private javax.swing.JSeparator jSeparator6;
        private javax.swing.JTable jTable1;
        private javax.swing.JPanel mainPanel;
        private javax.swing.JPanel riwayatTransaksi;
        private javax.swing.JTable tableDataTransaksi;
        private javax.swing.JButton tambahTransaksi_button;
        private javax.swing.JPanel transaksiBaru;
        private javax.swing.JTextField txt_NoNota;
        private javax.swing.JComboBox<String> ukuran_comboBox;
        private javax.swing.JComboBox<String> ukuran_comboBox2;
    }